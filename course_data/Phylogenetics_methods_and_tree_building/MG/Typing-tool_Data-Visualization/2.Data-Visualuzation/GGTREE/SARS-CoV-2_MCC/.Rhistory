install.packages("deSolve")
require(deSolve)
# define uma colecção de números, de 0 a 20 com intervalo de
# 1/120, será usado como tempo no modelo
tempo <- seq(0, 20, by = 1/120)
# define uma colecção de 2 números, N=proporção total da
# população, beta=coeficiente de transmissão
param <- c(N = 1, beta = 1)
# define uma colecção de 2 números que são as condições
# iniciais do modelo (em proporção)
cond_i <- c(S = 0.999, I = 0.001)
source('~/.active-rstudio-document')
resultado <- data.frame(rk4(cond_i, tempo, modeloSI, param))
resultado$S
# mostra a dinâmica dos infeciosos segundo a solução do
# modelo
plot(tempo, resultado$I, type = "l", col = "red", ylab = "proporcao da populacao",
xlab = "tempo", ylim = c(0, 1))
# adiciona uma linha ao grafico, neste caso com a curva dos
# suscetiveis a verde
lines(tempo, resultado$S, type = "l", col = "green")
modeloSIa <- function(t, x, p) {
S <- x[1]  #a posição 1 contém susceptíveis
I <- x[2]  #a posição 2 contém infeciosos
# aqui, as equações do modelo são escritas
with(as.list(p), {
dS <- -beta * S * I  #equação de susceptíveis
dI <- beta * S * I  #equação de infeciosos
res <- c(dS, dI)
list(res)
})
}
modeloSIa <- function(t, x, p) {
S <- x[1]  #a posição 1 contém susceptíveis
I <- x[2]  #a posição 2 contém infeciosos
# aqui, as equações do modelo são escritas
with(as.list(p), {
dS <- -beta * S * I  #equação de susceptíveis
dI <- beta * S * I  #equação de infeciosos
res <- c(dS, dI)
list(res)
})
}
resultado <- data.frame(rk4(cond_i, tempo, modeloSIa, param))
plot(tempo, resultado$I, type = "l", col = "red", ylab = "proporcao da populacao",
xlab = "tempo", ylim = c(0, 1))
lines(tempo, resultado$S, type = "l", col = "green")
# define uma colecção de números, de 0 a 20 com intervalo de
# 1/120, será usado como tempo no modelo
tempo <- seq(0, 20, by = 1/120)
# define uma colecção de 2 números, N=proporção total da
# população, beta=coeficiente de transmissão
param <- c(N = 1, beta = 1)
# define uma colecção de 2 números que são as condições
# iniciais do modelo (em proporção)
cond_i <- c(S = 0.999, I = 0.001)
tempo <- seq(0, 20, by = 1/120)
param <- c(N = 1, beta = 3, alpha = 1)
cond_i <- c(S = 0.999, I = 0.001)
modeloSIa <- function(t, x, p) {
S <- x[1]  #a posição 1 contém susceptíveis
I <- x[2]  #a posição 2 contém infeciosos
# aqui, as equações do modelo são escritas
with(as.list(p), {
dS <- -beta * S * I + alfa * I  #equação de susceptíveis
dI <- beta * S * I - alfa * I #equação de infeciosos
res <- c(dS, dI)
list(res)
})
}
resultado <- data.frame(rk4(cond_i, tempo, modeloSIa, param))
plot(tempo, resultado$I, type = "l", col = "red", ylab = "proporcao da populacao",
xlab = "tempo", ylim = c(0, 1))
tempo <- seq(0, 20, by = 1/120)
param <- c(N = 1, beta = 3, alpha = 1)
cond_i <- c(S = 0.999, I = 0.001)
modeloSIa <- function(t, x, p) {
S <- x[1]  #a posição 1 contém susceptíveis
I <- x[2]  #a posição 2 contém infeciosos
# aqui, as equações do modelo são escritas
with(as.list(p), {
dS <- -beta * S * I + alpha * I  #equação de susceptíveis
dI <- beta * S * I - alpha * I #equação de infeciosos
res <- c(dS, dI)
list(res)
})
}
resultado <- data.frame(rk4(cond_i, tempo, modeloSIa, param))
plot(tempo, resultado$I, type = "l", col = "red", ylab = "proporcao da populacao",
xlab = "tempo", ylim = c(0, 1))
lines(tempo, resultado$S, type = "l", col = "green")
tempo <- seq(0, 20, by = 1/120)
param <- c(N = 1, beta = 3, alpha = 1)
cond_i <- c(S = 0.999, I = 0.001, R = 0)
modeloSIb <- function(t, x, p) {
S <- x[1]  #a posição 1 contém susceptíveis
I <- x[2]  #a posição 2 contém infeciosos
R <- x[3]
# aqui, as equações do modelo são escritas
with(as.list(p), {
dS <- -beta * S * I  #equação de susceptíveis
dI <- beta * S * I - alpha * I #equação de infeciosos
dR <- +alpha * I
res <- c(dS, dI)
list(res)
})
}
resultado <- data.frame(rk4(cond_i, tempo, modeloSI, param))
resultado <- data.frame(rk4(cond_i, tempo, modeloSIb, param))
tempo <- seq(0, 20, by = 1/120)
param <- c(N = 1, beta = 3, alpha = 1)
cond_i <- c(S = 0.999, I = 0.001, R = 0)
modeloSIb <- function(t, x, p) {
S <- x[1]  #a posição 1 contém susceptíveis
I <- x[2]  #a posição 2 contém infeciosos
R <- x[3]  # aqui, as equações do modelo são escritas
with(as.list(p), {
dS <- -beta * S * I  #equação de susceptíveis
dI <- beta * S * I - alpha * I #equação de infeciosos
dR <- +alpha * I
res <- c(dS, dI)
list(res)
})
}
tempo <- seq(0, 20, by = 1/120)
param <- c(N = 1, beta = 3, alpha = 1)
cond_i <- c(S = 0.999, I = 0.001, R = 0)
modeloSIb <- function(t, x, p) {
S <- x[1]  #a posição 1 contém susceptíveis
I <- x[2]  #a posição 2 contém infeciosos
R <- x[3]  # aqui, as equações do modelo são escritas
with(as.list(p), {
dS <- -beta * S * I  #equação de susceptíveis
dI <- beta * S * I - alpha * I #equação de infeciosos
dR <- alpha * I
res <- c(dS, dI)
list(res)
})
}
resultado <- data.frame(rk4(cond_i, tempo, modeloSIb, param))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
lines(tempo, resultado$R, type = "l", col = "blue")
mu
mu()
tempo <- seq(0, 100, by = 1/120)
param <- c(N = 1, beta = 3, alpha = 1, nu = 1/70)
cond_i <- c(S = 0.999, I = 0.001, R = 0)
modeloSIc <- function(t, x, p) {
S <- x[1]  #a posição 1 contém susceptíveis
I <- x[2]  #a posição 2 contém infeciosos
R <- x[3]
# aqui, as equações do modelo são escritas
with(as.list(p), {
dS <- nu * (S + I + R) - beta S * I - nu * S #equação de susceptíveis
dI <- beta * S * I - alpha * I - nu * I #equação de infeciosos
dR <- alpha * I - nu * R
res <- c(dS, dI, dR)
list(res)
})
}
tempo <- seq(0, 100, by = 1/120)
param <- c(N = 1, beta = 3, alpha = 1, nu = 1/70)
cond_i <- c(S = 0.999, I = 0.001, R = 0)
modeloSIc <- function(t, x, p) {
S <- x[1]  #a posição 1 contém susceptíveis
I <- x[2]  #a posição 2 contém infeciosos
R <- x[3]
# aqui, as equações do modelo são escritas
with(as.list(p), {
dS <- nu * (S + I + R) - beta * S * I - nu * S #equação de susceptíveis
dI <- beta * S * I - alpha * I - nu * I #equação de infeciosos
dR <- alpha * I - nu * R
res <- c(dS, dI, dR)
list(res)
})
}
resultado <- data.frame(rk4(cond_i, tempo, modeloSIc, param))
plot(tempo, resultado$I, type = "l", col = "red", ylab = "proporcao da populacao",
xlab = "tempo", ylim = c(0, 1))
lines(tempo, resultado$S, type = "l", col = "green")
lines(tempo, resultado$R, type = "l", col = "blu")
lines(tempo, resultado$R, type = "l", col = "blue")
tempo <- seq(0, 200, by = 1/120)
param <- c(N = 1, beta = 2, alpha = 1, nu = 1/70, p = 0)
cond_i <- c(S = 0.999, I = 0.001, R = 0)
modeloSId <- function(t, x, p) {
S <- x[1]  #a posição 1 contém susceptíveis
I <- x[2]  #a posição 2 contém infeciosos
R <- x[3]
# aqui, as equações do modelo são escritas
with(as.list(p), {
dS <- nu * (1 - p) (S + I + R) - beta * S * I - nu * S #equação de susceptíveis
dI <- beta * S * I - alpha * I - nu * I #equação de infeciosos
dR <- nu * p + alpha * I- nu * R
res <- c(dS, dI, dR)
list(res)
})
}
resultado <- data.frame(rk4(cond_i, tempo, modeloSId, param))
resultado <- data.frame(rk4(cond_i, tempo, modeloSId, param))
tempo <- seq(0, 200, by = 1/120)
param <- c(N = 1, beta = 2, alpha = 1, nu = 1/70, p = 0)
cond_i <- c(S = 0.999, I = 0.001, R = 0)
modeloSId <- function(t, x, p) {
S <- x[1]  #a posição 1 contém susceptíveis
I <- x[2]  #a posição 2 contém infeciosos
R <- x[3]
# aqui, as equações do modelo são escritas
with(as.list(p), {
dS <- nu * (1 - p) * (S + I + R) - beta * S * I - nu * S #equação de susceptíveis
dI <- beta * S * I - alpha * I - nu * I #equação de infeciosos
dR <- nu * p + alpha * I- nu * R
res <- c(dS, dI, dR)
list(res)
})
}
resultado <- data.frame(rk4(cond_i, tempo, modeloSId, param))
plot(tempo, resultado$I, type = "l", col = "red", ylab = "proporcao da populacao"
xlab = "tempo", ylim = c(0, 1))
source('~/.active-rstudio-document')
plot(tempo, resultado$I, type = "l", col = "red", ylab = "proporcao da populacao",
xlab = "tempo", ylim = c(0, 1))
lines(tempo, resultado$S, type = "l", col = "green")
lines(tempo, resultado$R, type = "l", col = "blue")
load("~/Desktop/ZiBRA 2/ZIKV_ZiBRA2/ZIKV_Manaus/Manaus /TempEST/TemEst data.txt")
load("~/Desktop/ZiBRA 2/ZIKV_ZiBRA2/ZIKV_Manaus/Manaus /TempEST/TemEst data1.txt")
install.packages("ggplot2")
library("ggplot2") #load the library
setwd ("/Users/user/Dropbox/phylogeography_UA/figures/Suppl_f_1") #navigate to the directory
getwd () #check the directory
#DATA
data = read.table ("data_R.txt") # read from the file
data = read.table ("TemEstdata.txt") # read from the file
load("~/Desktop/ZiBRA 2/ZIKV_ZiBRA2/ZIKV_Manaus/Manaus /TempEST/TemEstdata.txt")
data = read.table ("TempEstdata.txt") # read from the file
load("~/Desktop/ZiBRA 2/ZIKV_ZiBRA2/ZIKV_Manaus/Manaus /TempEST/TemEstdata.txt")
if (!require("ggplot2")){
install.packages("ggplot2")
}
library("ggplot2") #load the library
remotes::install_github("wilkelab/cowplot")
library("cowplot")
theme_set(theme_cowplot())
remotes::install_github("wilkelab/cowplot")
library("cowplot")
install.packages("cowplot")
#remotes::install_github("wilkelab/cowplot")
library("cowplot")
theme_set(theme_cowplot())
myFileData <- "/Users/Mittenavoig/Desktop/Marta/Mauritius_1.1.318/iqtree2_Final/B.1.1.318.txt"
if (!(file.exists(myFileData))){
stop("Error:directory does not exist, please check if the path is correct.")
}
#DATA
data = read.table(myFileData, header=T) # read from the file
#GGPLOT
ggplot(data, aes(date, distance, location))+
geom_point(aes(fill = location, shape=location), size = 4)+
scale_shape_manual(values = c(21, 21, 21, 21, 21, 21, 21, 21,21, 21))+
geom_smooth(method=lm,se=T, colour="black")+
#theme_bw()+
ylab("Root-to-tip-distances")+
xlab("Time (years)")+
ggtitle("A.VOI")
annotate("text", fontface =2,x=2021.2, y=6e-04, label="cofficient correletion=0.51", col='tomato3')+
annotate("text", fontface =2,x=2021.2, y=5e-04, label="r2=0.24", col='tomato3')
annotate("text", fontface =2,x=2021.2, y=6e-04, label="cofficient correletion=0.51", col='tomato3')
#GGPLOT
ggplot(data, aes(date, distance, location))+
geom_point(aes(fill = location, shape=location), size = 4)+
scale_shape_manual(values = c(21, 21, 21, 21, 21, 21, 21, 21,21, 21))+
geom_smooth(method=lm,se=T, colour="black")+
#theme_bw()+
ylab("Root-to-tip-distances")+
xlab("Time (years)")+
ggtitle("A.VOI")+
annotate("text", fontface =2,x=2021.2, y=6e-04, label="cofficient correletion=0.51", col='tomato3')
#GGPLOT
ggplot(data, aes(date, distance, location))+
geom_point(aes(fill = location, shape=location), size = 4)+
scale_shape_manual(values = c(21, 21, 21, 21, 21, 21, 21, 21,21, 21))+
geom_smooth(method=lm,se=T, colour="black")+
#theme_bw()+
ylab("Root-to-tip-distances")+
xlab("Time (years)")+
ggtitle("A.VOI")+
annotate("text", fontface =2,x=2021.05, y=6e-04, label="cofficient correletion=0.51", col='tomato3')
if (! require("lubridate")){
install.packages("lubridate")
library(lubridate)
}
library(lubridate)
x=c(2021.05, 2021.10,2021.15, 2021.20)
f <- format(date_decimal(x), "%d-%m-%Y")
f
myFileData <- "/Users/Mittenavoig/Desktop/Martitius_1.1.318/iqtree2_Final/Continous/2/Maur.txt"
if (!(file.exists(myFileData))){
stop("Error:directory does not exist, please check if the path is correct.")
}
#DATA
data = read.table(myFileData, header=T) # read from the file
#GGPLOT
ggplot(data, aes(date, distance))+
geom_point(), size = 4)+
scale_shape_manual(values = c(21, 21, 21, 21, 21, 21, 21, 21,21, 21))+
geom_smooth(method=lm,se=T, colour="black")+
#theme_bw()+
ylab("Root-to-tip-distances")+
xlab("Time (years)")+
ggtitle("A.VOI")+
annotate("text", fontface =2,x=2021.05, y=6e-04, label="cofficient correletion=0.51", col='tomato3')
#GGPLOT
ggplot(data, aes(date, distance))+
geom_point(), size = 4)+
scale_shape_manual(values = c(21, 21, 21, 21, 21, 21, 21, 21,21, 21))+
geom_smooth(method=lm,se=T, colour="black")+
#theme_bw()+
ylab("Root-to-tip-distances")+
xlab("Time (years)")+
ggtitle("A.VOI")
# GGPLOT
ggplot(data, aes(date,distance))+
geom_point()+
geom_smooth(method=lm,se=T)+
theme_bw()+
ylab("Distance")+xlab("Date")+ggtitle("Tempest")
# GGPLOT
ggplot(data, aes(date,distance))+
geom_point()+
geom_smooth(method=lm,se=T)+
#theme_bw()+
ylab("Distance")+xlab("Date")+ggtitle("Tempest")
#GGPLOT
ggplot(data, aes(date, distance))+
geom_point()+
scale_shape_manual(values = c(21, 21, 21, 21, 21, 21, 21, 21,21, 21))+
geom_smooth(method=lm,se=T, colour="black")+
#theme_bw()+
ylab("Root-to-tip-distances")+
xlab("Time (years)")+
ggtitle("A.VOI")
myFileData <- "/Users/Mittenavoig/Desktop/Marta/Mauritius_1.1.318/iqtree2_Final/Continous/2/Maur.txt"
if (!(file.exists(myFileData))){
stop("Error:directory does not exist, please check if the path is correct.")
}
#DATA
data = read.table(myFileData, header=T) # read from the file
# GGPLOT
ggplot(data, aes(date,distance))+
geom_point()+
geom_smooth(method=lm,se=T)+
#theme_bw()+
ylab("Distance")+xlab("Date")+ggtitle("Tempest")
#GGPLOT
ggplot(data, aes(date, distance))+
geom_point(size = 4)+
scale_shape_manual(values = c(21, 21, 21, 21, 21, 21, 21, 21,21, 21))+
geom_smooth(method=lm,se=T, colour="black")+
#theme_bw()+
ylab("Root-to-tip-distances")+
xlab("Time (years)")+
ggtitle("A.VOI")+
annotate("text", fontface =2,x=2021.05, y=6e-04, label="cofficient correletion=0.51", col='tomato3')
#GGPLOT
ggplot(data, aes(date, distance))+
geom_point(aes(), size = 4)+
scale_shape_manual(values = c(21, 21, 21, 21, 21, 21, 21, 21,21, 21))+
geom_smooth(method=lm,se=T, colour="black")+
#theme_bw()+
ylab("Root-to-tip-distances")+
xlab("Time (years)")+
ggtitle("A.VOI")+
annotate("text", fontface =2,x=2021.05, y=6e-04, label="cofficient correletion=0.51", col='tomato3')
#Converting decimal year to date format
library(lubridate)
#Converting decimal year to date format
library(lubridate)
x=c(2021.175, 2021.18,2021.185, 2021.190, 2021.195)
f <- format(date_decimal(x), "%d-%m-%Y")
f
x=c(2020.9, 2020.95,2021, 2021.05, 2021.15, 2021.2, 2021.25)
f <- format(date_decimal(x), "%d-%m-%Y")
f
if (! require("lubridate")){
install.packages("lubridate")
library(lubridate)
}
library(ggplot2)
library(cowplot)
library(ggtree)
library(treeio)
library(dplyr)
##MCC
MCCtree <- read.beast("MCC_SARS_a2.5.tre")
setwd("~/Desktop/SARS-CoV-2_MCC")
##MCC
MCCtree <- read.beast("MCC_SARS_a2.5.tre")
location <- read.delim2("metadata.txt")
ggtree(MCCtree) + geom_text2(aes(subset=!isTip, label=node), size=3,hjust=-.3)  #Label nodes
browseVignettes("ggtree")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("tidytree")
install.packages("ggtree")
devtools::install_github("GuangchuangYu/ggtree")
